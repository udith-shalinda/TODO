import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import { AddTODO } from '../components/add-todo'
import { OneTODO } from '../components/one-todo'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router';
import { whoAmI } from '../services/user.service'
import { getMyTODOs } from '../services/todo.service'

export interface todoItem {
  id: string;
  name: string;
  completed: boolean;
}

const Home: NextPage = () => {
  const [todoList, settodoList] = useState<any[]>([]);
  const router = useRouter()

  useEffect(() => {
    checkToken();
  }, [])

  const checkToken = async () => {
    try {
      const data: any = await whoAmI();
      if(!data) {
        router.push('/login');
      }else{
        loadMyToDo();
      }
    } catch (error) {
      router.push('/login');
    }
  }
  const loadMyToDo = async () => {
    try {
      const data = await getMyTODOs();
      settodoList(data.map((todo: any) => {return {...todo, id: todo._id}}));     
    } catch (error) {
      console.log(error);
    }
  }
  
  
  const addTODO = (todo: todoItem) => {
      settodoList([...todoList, todo])
  }
  const editTODO = (newTODO: string, index: number) => {
    const newTODOList = todoList.map((todo, i) => {
      if(i === index){
        return {...todo, name: newTODO};
      }else { 
        return todo;
      }
    })
    settodoList(newTODOList);
  }
  const updateCompleteTodo = (index: number) => {
    const newTODOList = todoList.map((todo, i) => {
      if(i === index){
        console.log(!todo.completed);
        return {...todo, completed: !todo.completed};
      }else { 
        return todo;
      }
    })
    settodoList(newTODOList);
  }
  const deleteTODO = (id: number) => {
    settodoList(todoList.filter((todo) => todo.id !== id));
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className='bg-yellow-300 py-6'>
        <h3 className='text font-bold ml-8'>TODO APP</h3>
        <button onClick={()=> {router.push('login')}}>Login</button>
      </div>
    
      <main className={styles.main}>
        <AddTODO addTODO={addTODO}/>
        {todoList && todoList.length > 0 && 
          todoList.map((todo, index) => {
            return (
              <OneTODO
                key={index} 
                todo={todo}
                index={index}
                edit={editTODO}
                delete={deleteTODO}
                updateCompleteTodo={updateCompleteTodo}
              ></OneTODO>
            )
          })
        }
      </main>
    </div>
  )
}

export default Home
